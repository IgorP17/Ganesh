–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º –≤–∞—à –º–∏–Ω–∏-–ø—Ä–æ–µ–∫—Ç –ø–æ —à–∞–≥–∞–º. –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—Å–∞—Ç—å –∫–∞–∂–¥—ã–π —ç—Ç–∞–ø.
1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Kubernetes –Ω–∞ Linux Mint (VirtualBox)
–®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker

Kubernetes –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Docker –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏. –£—Å—Ç–∞–Ω–æ–≤–∏–º Docker:
bash
Copy

sudo apt update
sudo apt install -y docker.io
sudo systemctl enable docker
sudo systemctl start docker

–®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ kubectl, kubeadm –∏ kubelet

–£—Å—Ç–∞–Ω–æ–≤–∏–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Kubernetes:
bash
Copy

sudo apt update
sudo apt install -y apt-transport-https ca-certificates curl
curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/kubernetes-archive-keyring.gpg
echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt update
-- —Ç—É—Ç –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞ –ø–ø—Ü
    sudo rm /etc/apt/sources.list.d/kubernetes.list
    -- —Ç—É—Ç –±—É–¥–µ—Ç –ø–æ–¥—Å—Ç–∞–≤–∞
    echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list

    sudo mkdir -p /etc/apt/keyrings
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    sudo apt update

sudo apt install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ:
kubectl version --client
kubeadm version

--here –®–∞–≥ 3: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Kubernetes

–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∞—Å—Ç–µ—Ä Kubernetes:
bash
Copy

sudo kubeadm init --pod-network-cidr=10.244.0.0/16
-- remote version is much newer: v1.32.2; falling back to: stable-1.28
    sudo apt remove kubeadm kubelet kubectl
    sudo apt update
    sudo apt install -y apt-transport-https ca-certificates curl
    sudo mkdir -p /etc/apt/keyrings
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list

    sudo apt install -y kubelet kubeadm kubectl
    sudo apt-mark hold kubelet kubeadm kubectl

    kubeadm version
    kubectl version --client
    kubelet --version

    sudo kubeadm init --pod-network-cidr=10.244.0.0/16

    –æ—à–∏–±–∫–∞ –ø–æ swap
    sudo swapon --show
        sudo swapoff -a - –¥–æ –ø–µ—Ä–µ–∑–∞–Ω—Ä—É–∑–∫–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å —Å–≤–∞–ø
        sudo nano /etc/fstab
        –∫–æ–º–º–µ–Ω—Ç–∞—Ä—Ä–∏–º
        # /swapfile none swap sw 0 0


–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö —É–∑–ª–æ–≤ (–µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å) –∏ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ kubectl:
bash
Copy

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

–®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–ª–∞–≥–∏–Ω–∞

–£—Å—Ç–∞–Ω–æ–≤–∏–º —Å–µ—Ç–µ–≤–æ–π –ø–ª–∞–≥–∏–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, Flannel):
bash
Copy

kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml

–®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∞—Å—Ç–µ—Ä–∞

–£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∫–ª–∞—Å—Ç–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç:
bash
Copy

kubectl get nodes

2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Kafka –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–ø–∏–∫–∞
–®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Kafka

–£—Å—Ç–∞–Ω–æ–≤–∏–º Kafka —Å –ø–æ–º–æ—â—å—é Helm (–ø–∞–∫–µ—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–ª—è Kubernetes):
bash
Copy

# –£—Å—Ç–∞–Ω–æ–≤–∏–º Helm
curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

# –î–æ–±–∞–≤–∏–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Bitnami
helm repo add bitnami https://charts.bitnami.com/bitnami

# –£—Å—Ç–∞–Ω–æ–≤–∏–º Kafka
helm install my-kafka bitnami/kafka

–®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–ø–∏–∫–∞

–°–æ–∑–¥–∞–¥–∏–º —Ç–æ–ø–∏–∫ –≤ Kafka:
bash
Copy

kubectl exec -it my-kafka-0 -- kafka-topics.sh --create --topic my-topic --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1

3. –ü—Ä–∏–º–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Java
–®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞

–°–æ–∑–¥–∞–¥–∏–º –ø—Ä–æ–µ–∫—Ç —Å –ø–æ–º–æ—â—å—é Maven:
bash
Copy

mvn archetype:generate -DgroupId=com.example -DartifactId=kafka-app -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false
cd kafka-app

–®–∞–≥ 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

–î–æ–±–∞–≤–∏–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ pom.xml:
xml
Copy

<dependencies>
    <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka-clients</artifactId>
        <version>3.1.0</version>
    </dependency>
    <dependency>
        <groupId>com.sparkjava</groupId>
        <artifactId>spark-core</artifactId>
        <version>2.9.4</version>
    </dependency>
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>1.7.36</version>
    </dependency>
</dependencies>

Run HTML
–®–∞–≥ 3: –ù–∞–ø–∏—Å–∞–Ω–∏–µ –∫–æ–¥–∞

–°–æ–∑–¥–∞–¥–∏–º –∫–ª–∞—Å—Å App.java:
java
Copy

package com.example;

import org.apache.kafka.clients.producer.*;
import org.apache.kafka.common.serialization.StringSerializer;
import spark.Spark;

import java.util.Properties;

public class App {
    public static void main(String[] args) {
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Kafka Producer
        Properties props = new Properties();
        props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, "my-kafka:9092");
        props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());
        props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());

        KafkaProducer<String, String> producer = new KafkaProducer<>(props);

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Spark (–≤–µ–±-—Å–µ—Ä–≤–µ—Ä)
        Spark.port(8080);
        Spark.post("/send", (req, res) -> {
            String message = req.body();
            System.out.println("Received message: " + message);

            // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Kafka
            ProducerRecord<String, String> record = new ProducerRecord<>("my-topic", message);
            producer.send(record, (metadata, exception) -> {
                if (exception != null) {
                    System.err.println("Error sending message: " + exception.getMessage());
                } else {
                    System.out.println("Message sent to topic: " + metadata.topic());
                }
            });

            return "Message sent to Kafka";
        });
    }
}

–®–∞–≥ 4: –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞

–°–æ–±–µ—Ä–µ–º –ø—Ä–æ–µ–∫—Ç:
bash
Copy

mvn clean package

4. –î–µ–ø–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ Kubernetes
–®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ Dockerfile

–°–æ–∑–¥–∞–¥–∏–º Dockerfile:
Dockerfile
Copy

FROM openjdk:11-jre-slim
COPY target/kafka-app-1.0-SNAPSHOT.jar /app.jar
CMD ["java", "-jar", "/app.jar"]

–®–∞–≥ 2: –°–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–∞

–°–æ–±–µ—Ä–µ–º Docker-–æ–±—Ä–∞–∑:
bash
Copy

docker build -t my-kafka-app .

–®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞ Kubernetes

–°–æ–∑–¥–∞–¥–∏–º —Ñ–∞–π–ª deployment.yaml:
yaml
Copy

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-app
  template:
    metadata:
      labels:
        app: kafka-app
    spec:
      containers:
      - name: kafka-app
        image: my-kafka-app
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-app
spec:
  selector:
    app: kafka-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: NodePort

–®–∞–≥ 4: –î–µ–ø–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

–ü—Ä–∏–º–µ–Ω–∏–º –º–∞–Ω–∏—Ñ–µ—Å—Ç:
bash
Copy

kubectl apply -f deployment.yaml

–®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤

–ü—Ä–æ–≤–µ—Ä–∏–º –ª–æ–≥–∏ –ø–æ–¥–∞:
bash
Copy

kubectl get pods
kubectl logs <pod-name>

–®–∞–≥ 6: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

–û—Ç–ø—Ä–∞–≤–∏–º POST-–∑–∞–ø—Ä–æ—Å:
bash
Copy

curl -X POST -d "Hello Kafka" http://<node-ip>:<node-port>/send

–ò—Ç–æ–≥

–¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å:

    –ö–ª–∞—Å—Ç–µ—Ä Kubernetes –Ω–∞ Linux Mint.

    Kafka —Å —Ç–æ–ø–∏–∫–æ–º my-topic.

    Java-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç POST-–∑–∞–ø—Ä–æ—Å—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö –≤ Kafka.

    –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –≤ Kubernetes, –∏ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –ª–æ–≥–∏.

–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏—Ç–µ! üòä
New chat
